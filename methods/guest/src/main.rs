#![no_main]
// If you want to try std support, also update the guest Cargo.toml file
#![no_std] // std support is experimental

use risc0_zkvm::guest::env;

risc0_zkvm::guest::entry!(main);

const APPROXIMATE_MOON_TRAJECTORY: [(f64, f64, f64); 27] = [
    // s, x, z
    (0.1, 0.07900000000000003, 0.175),
    (0.2, 0.23800000000000004, 0.374),
    (0.30000000000000004, 0.3970000000000001, 0.5569999999999999),
    (0.4, 0.5560000000000002, 0.724),
    (0.5, 0.7150000000000001, 0.875),
    (0.6, 0.874, 1.0099999999999998),
    (0.7, 1.033, 1.129),
    (0.7999999999999999, 1.192, 1.2319999999999998),
    (0.8999999999999999, 1.3509999999999998, 1.3189999999999997),
    (0.9999999999999999, 1.5099999999999998, 1.3899999999999997),
    (1.0999999999999999, 1.6689999999999998, 1.4449999999999998),
    (1.2, 1.8279999999999998, 1.4839999999999998),
    (1.3, 1.987, 1.5069999999999997),
    (1.4000000000000001, 2.1460000000000004, 1.5139999999999998),
    (1.5000000000000002, 2.3050000000000006, 1.505),
    (1.6000000000000003, 2.4640000000000004, 1.4799999999999995),
    (1.7000000000000004, 2.6230000000000007, 1.4389999999999996),
    (1.8000000000000005, 2.782000000000001, 1.3819999999999997),
    (1.9000000000000006, 2.941000000000001, 1.3089999999999993),
    (2.0000000000000004, 3.100000000000001, 1.2199999999999993),
    (2.1000000000000005, 3.259000000000001, 1.1149999999999989),
    (2.2000000000000006, 3.418000000000001, 0.9939999999999993),
    (2.3000000000000007, 3.5770000000000013, 0.8569999999999984),
    (2.400000000000001, 3.7360000000000015, 0.7039999999999988),
    (2.500000000000001, 3.8950000000000014, 0.5349999999999984),
    (2.600000000000001, 4.054000000000002, 0.349999999999997),
    (2.700000000000001, 4.213000000000002, 0.14899999999999824),
];

pub fn main() {
    let mut t = 0.1;
    let mut i = 0;

    while t < 2.8 {
        let (x, z) = calculate_trajectory(t);
        // x is correct
        assert_eq!(APPROXIMATE_MOON_TRAJECTORY[i as usize].1, x);
        // z is correct
        assert_eq!(APPROXIMATE_MOON_TRAJECTORY[i as usize].2, z);
        t += 0.1;
        i += 1;
    }

    // TODO: Get values out
    env::commit(&true);
}

fn calculate_trajectory(t: f64) -> (f64, f64) {
    let x0: f64 = -0.08;
    let z0: f64 = -0.04;
    let vx0: f64 = 1.59;
    let vz0: f64 = 2.23;
    // The value we use for moon's gravity
    let gm: f64 = 1.6;

    // Value for a given value in the paper by:
    // $x = X_0 + V_{X_o}t$
    let x = x0 + vx0 * t;
    // Value
    let z = z0 + vz0 * t - (0.5 * gm * (t * t));

    (x, z)
}
